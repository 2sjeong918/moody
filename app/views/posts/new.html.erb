

<!--<form action= '/posts' method = "POST">-->
<!--  <input type="hidden" name="title" value = "ads"></input>-->
<!--  <input type="hidden" name="content" value = "asdf"></input>-->
  
<!--  <input type="hidden" name="post_id" value = "1"> </input>-->
<!--  <input type="hidden" name="latitude0" id="set_lat" value = "set_lat"></input>-->
<!--  <input type="hidden" name="longitude0" id="set_lng" value = "set_lng"></input>-->
<!--  <input type="text" name="set_title0" id="set_title" value="set_title"></input>-->
  
<!--  <input type="hidden" name="post_id" value = "1"> </input>-->
<!--  <input type="hidden" name="latitude1" id="set_lat" value = "set_lat"></input>-->
<!--  <input type="hidden" name="longitude1" id="set_lng" value = "set_lng"></input>-->
<!--  <input type="text" name="set_title1" id="set_title" value="set_title"></input>-->

<!--  <input type="hidden" name="post_id" value = "1"> </input>-->
<!--  <input type="hidden" name="latitude2" id="set_lat" value = "set_lat"></input>-->
<!--  <input type="hidden" name="longitude2" id="set_lng" value = "set_lng"></input>-->
<!--  <input type="text" name="set_title2" id="set_title" value="set_title"></input>-->
  
<!--  <input type="hidden" name="post_id" value = "1"> </input>-->
<!--  <input type="hidden" name="latitude3" id="set_lat" value = "set_lat"></input>-->
<!--  <input type="hidden" name="longitude3" id="set_lng" value = "set_lng"></input>-->
<!--  <input type="text" name="set_title3" id="set_title" value="set_title"></input>-->
  
<!--  <input type="hidden" name="post_id" value = "1"> </input>-->
<!--  <input type="hidden" name="latitude4" id="set_lat" value = "set_lat"></input>-->
<!--  <input type="hidden" name="longitude4" id="set_lng" value = "set_lng"></input>-->
<!--  <input type="text" name="set_title4" id="set_title" value="set_title"></input>-->
  

<!--  <input type="submit">-->
  
<!--</form>-->
<header class="header">
  <a href="/" class="s-back-btn">
    <%= image_tag("back_btn.png") %>
  </a>
  <h1 class="s-post-title">경로 등록하기</h1>
</header>

<%= form_for @post, method: "post" do |f| %>

      <% if @post.errors.any? %>
        <div id="error_explanation">
        <h2><%= pluralize(@post.errors.count, "error") %> prohibited this post from being saved:</h2>

        <ul>
          <% @post.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
        </ul>
        </div>
      <% end %>
    <div class="s-wrapper">
        <%= f.hidden_field :user_id, value: current_user.id %>
        <div class="field s-field">
          <%= f.label :title, "제목" %>
          <%= f.text_field :title, placeholder: "여행의 제목을 입력해주세요"%>
        </div>
        <div class="field s-field">
          <%= f.label :postimg, "대표이미지" %>
          <%= f.file_field :postimg, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="s-mood-container">
            <div>여행 무드를 5개 선택해주세요!</div>
            <div class="s-mood-wrapper">
            <div class="field s-mood">
              <%= f.check_box :mood1, { checked: false }, 'romantic', '1' %>
              <%= f.label :mood1, "#romantic" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood2, { checked: false }, 'tasty', '1' %>
              <%= f.label :mood2, "#tasty" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood3, { checked: false }, 'luxury', '1' %>
              <%= f.label :mood3, "#luxury" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood4, { checked: false }, 'healing', '1' %>
              <%= f.label :mood4, "#healing" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood5, { checked: false }, 'relaxing', '1' %>
              <%= f.label :mood5, "#relaxing" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood6, { checked: false }, 'escape', '1' %>
              <%= f.label :mood6, "#escape" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood7, { checked: false }, 'peaceful', '1' %>
              <%= f.label :mood7, "#peaceful" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood8, { checked: false }, 'active', '1' %>
              <%= f.label :mood8, "#active" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood9, { checked: false }, 'challenging', '1' %>
              <%= f.label :mood9, "#challenging" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood10, { checked: false }, 'meaningful', '1' %>
              <%= f.label :mood10, "#meaningful" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood11, { checked: false }, 'traditional', '1' %>
              <%= f.label :mood11, "#traditional" %>
            </div>
            <div class="field s-mood">
              <%= f.check_box :mood12, { checked: false }, 'sight', '1' %>
              <%= f.label :mood12, "#sight" %>
            </div>
        </div>
        </div>
    </div>
    
    <div class="map_wrap">
        <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
        <div id="menu_wrap" class="bg_white">
            <div class="option">
                <div>
                        키워드 : <input type="text" value="상수맛집" id="keyword" size="15"> 
                        <button onclick="searchPlaces(); return false;">검색하기</button> 
                </div>
            </div>
            <hr>
            <ul id="placesList"></ul>
            <div id="pagination"></div>
        </div>
    </div>    
        
    
    <div class="point-wrapper">
        <%= f.hidden_field :latitude0, id: "set_lat0", value: "set_lat0" %>
        <%= f.hidden_field :longitude0, id: "set_lng0", value: "set_lng0" %>
        <div class="field s-field">
            <%= f.label :point_title0, "1번째 경로" %>
            <%= f.text_field :point_title0, id: "set_title0", value: " ", Onfocus: "click_field0()" %>            </div>
        <div class="field s-field">
            <%= f.label :cardimg0, "대표이미지" %>
            <%= f.file_field :cardimg0, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="field s-field">
            <%= f.label :content0, "설명" %>
            <%= f.text_field :content0, value: " "  %>
        </div>
    </div>
    
    
    <div class="point-wrapper">
        <%= f.hidden_field :latitude1, id: "set_lat1", value: "set_lat1" %>
        <%= f.hidden_field :longitude1, id: "set_lng1", value: "set_lng1" %>
        <div class="field s-field">
            <%= f.label :point_title1, "2번째 경로" %>
            <%= f.text_field :point_title1, id: "set_title1", value: " ", Onfocus: "click_field1()" %>
        </div>
        <div class="field s-field">
          <%= f.label :cardimg1, "대표이미지" %>
          <%= f.file_field :cardimg1, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="field s-field">
            <%= f.label :content1, "설명" %>
            <%= f.text_field :content1, value: " "  %>
        </div>
    </div>
    
    <div class="point-wrapper">
        <%= f.hidden_field :latitude2, id: "set_lat2", value: "set_lag2" %>
        <%= f.hidden_field :longitude2, id: "set_lng2", value: "set_lng2" %>
        <div class="field s-field">
            <%= f.label :point_title2, "3번째 경로" %>
            <%= f.text_field :point_title2, id: "set_title2", value: " ", Onfocus: "click_field2()" %>
        </div>
        <div class="field s-field">
          <%= f.label :cardimg2, "대표이미지" %>
          <%= f.file_field :cardimg2, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="field s-field">
            <%= f.label :content2, "설명" %>
            <%= f.text_field :content2, value: " "  %>
        </div>
    </div>
    
    
    <div class="point-wrapper">
        <%= f.hidden_field :latitude3, id: "set_lat3", value: "set_lat3" %>
        <%= f.hidden_field :longitude3, id: "set_lng3", value: "set_lng3" %>
        <div class="field s-field">
            <%= f.label :point_title3, "4번째 경로" %>
            <%= f.text_field :point_title3, id: "set_title3", value: " ", Onfocus: "click_field3()"  %>
        </div>
        <div class="field s-field">
          <%= f.label :cardimg3, "대표이미지" %>
          <%= f.file_field :cardimg3, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="field s-field">
            <%= f.label :content3, "설명" %>
            <%= f.text_field :content3, value: " "  %>
        </div>
    </div>
    
    <div class="point-wrapper">
        <%= f.hidden_field :latitude4, id: "set_lat4", value: "set_lat4" %>
        <%= f.hidden_field :longitude4, id: "set_lng4", value: "set_lng4" %>
        <div class="field s-field">
            <%= f.label :point_title4, "5번째 경로" %>
            <%= f.text_field :point_title4, id: "set_title4", value: " ", Onfocus: "click_field4()" %>
        </div>
        <div class="field s-field">
          <%= f.label :cardimg4, "대표이미지" %>
          <%= f.file_field :cardimg4, accept: 'image/png,image/gif,image/jpeg'%>
        </div>
        <div class="field s-field">
            <%= f.label :content4, "설명" %>
            <%= f.text_field :content4, value: " " %>
        </div>
    </div>
    
    
    <div class="s-post-btn">
      <%= f.submit "등록하기"%>
    </div>
    
<% end %>
  

      <style>
      .map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;}
      .map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;}
      .map_wrap {position:sticky;position:-webkit-sticky;top:0;width:100%;height:300px;}
      #menu_wrap {position:absolute;top:30px;;left:0;bottom:0;width:200px;margin:10px 0 30px 10px;padding:5px;overflow-y:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;}
      .bg_white {background:#fff;}
      #menu_wrap hr {display: block; height: 1px;border: 0; border-top: 2px solid #5F5F5F;margin:3px 0;}
      #menu_wrap .option{text-align: center;}
      #menu_wrap .option p {margin:10px 0;}  
      #menu_wrap .option button {margin-left:5px;}
      #placesList li {list-style: none;}
      #placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;}
      #placesList .item span {display: block;margin-top:4px;}
      #placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}
      #placesList .item .info{padding:10px 0 10px 55px;}
      #placesList .info .gray {color:#8a8a8a;}
      #placesList .info .jibun {padding-left:26px;background:url(http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;}
      #placesList .info .tel {color:#009900;}
      #placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;}
      #placesList .item .marker_1 {background-position: 0 -10px;}
      #placesList .item .marker_2 {background-position: 0 -56px;}
      #placesList .item .marker_3 {background-position: 0 -102px}
      #placesList .item .marker_4 {background-position: 0 -148px;}
      #placesList .item .marker_5 {background-position: 0 -194px;}
      #placesList .item .marker_6 {background-position: 0 -240px;}
      #placesList .item .marker_7 {background-position: 0 -286px;}
      #placesList .item .marker_8 {background-position: 0 -332px;}
      #placesList .item .marker_9 {background-position: 0 -378px;}
      #placesList .item .marker_10 {background-position: 0 -423px;}
      #placesList .item .marker_11 {background-position: 0 -470px;}
      #placesList .item .marker_12 {background-position: 0 -516px;}
      #placesList .item .marker_13 {background-position: 0 -562px;}
      #placesList .item .marker_14 {background-position: 0 -608px;}
      #placesList .item .marker_15 {background-position: 0 -654px;}
      #pagination {margin:10px auto;text-align: center;}
      #pagination a {display:inline-block;margin-right:10px; cursor:pointer;}
      #pagination .on {font-weight: bold; cursor: default ; color:#777;}
      
      </style>

<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c8998e45baf1b7a273562059ea35098f&libraries=services"></script>
<script>
    // 마커를 담을 배열입니다
    var markers = [];
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
        mapOption = {
            center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
            level: 3 // 지도의 확대 레벨
        };  
    // 지도를 생성합니다.
    var map = new daum.maps.Map(mapContainer, mapOption);
    // value로 넘어갈 전역변수를 선언합니다.
    var set_lat0, set_lat1, set_lat2, set_lat3, set_lat4; 
    var set_lng0, set_lng1, set_lng2, set_lng3, set_lng4; 
    var set_title0, set_title1, set_title2, set_title3, set_title4;
    var click_num = 0;
    var main_lng, main_lat;
    
    daum.maps.event.addListener(map, 'click', function(mouseEvent) {        
        
        // 클릭한 위도, 경도 정보를 가져옵니다 
        var latlng = mouseEvent.latLng;
        
        var message = '클릭한 위치의 위도는 ' + latlng.getLat() + ' 이고, ';
        message += '경도는 ' + latlng.getLng() + ' 입니다';
        
        console.log(click_num);
        
        // if (click_num == 0){
        // set_lat0 = latlng.getLat();
        // set_lng0 = latlng.getLng();
        // console.log(set_lat0);
        // }
        // else if (click_num == 1){
        // set_lat1 = latlng.getLat();
        // set_lng1 = latlng.getLng();
        // console.log(set_lat1);
        // }
        // else if (click_num == 2){
        // set_lat2 = latlng.getLat();
        // set_lng2 = latlng.getLng();
        // console.log(set_lat2);
        // }
        // else if (click_num == 3){
        // set_lat3 = latlng.getLat();
        // set_lng3 = latlng.getLng();
        // }
        // else if (click_num == 4){
        // set_lat4 = latlng.getLat();
        // set_lng4 = latlng.getLng();
        
        // }
        // else{}
        
        setCenter();
        
        
        var resultDiv = document.getElementById('result'); 
        
        // console.log(message);
        
    });
    
    function click_field0() {
        click_num = 0;
    }
    
    function click_field1() {
        click_num = 1;
    }
    
    function click_field2() {
        click_num = 2;
    }
    
    function click_field3() {
        click_num = 3;
    }
    
    function click_field4() {
        click_num = 4;
    }
    
     function setCenter() {            
            // 이동할 위도 경도 위치를 생성합니다 
            var moveLatLon = new daum.maps.LatLng(main_lat, main_lng);
            
            if (click_num == 0){
                document.getElementById('set_lat0').value = set_lat0;
                document.getElementById('set_lng0').value = set_lng0;
                document.getElementById('set_title0').value = set_title0;
            }
            else if (click_num == 1){
                document.getElementById('set_lat1').value = set_lat1;
                document.getElementById('set_lng1').value = set_lng1;
                document.getElementById('set_title1').value = set_title1;
                
            }
            else if (click_num == 2){
                document.getElementById('set_lat2').value = set_lat2;
                document.getElementById('set_lng2').value = set_lng2;
                document.getElementById('set_title2').value = set_title2;
                
            }
            else if (click_num == 3){                
                document.getElementById('set_lat3').value = set_lat3;
                document.getElementById('set_lng3').value = set_lng3;
                document.getElementById('set_title3').value = set_title3;
                
            }
            else if (click_num == 4){
                document.getElementById('set_lat4').value = set_lat4;
                document.getElementById('set_lng4').value = set_lng4;
                document.getElementById('set_title4').value = set_title4;
                
            }
            else{
                return;
            }
            // document.getElementById('set_lat').value = set_lat+"[click_num]";
            // document.getElementById('set_lng').value = set_lng+[click_num];
            // document.getElementById('set_title').value = set_title;
           //  click_num = click_num+1;
            // document.getElementById('click_num').value = click_num;
            // 지도 중심을 이동 시킵니다
            map.panTo(moveLatLon);
            
       }
    
    // 장소 검색 객체를 생성합니다
    var ps = new daum.maps.services.Places();  
    
    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다
    var infowindow = new daum.maps.InfoWindow({zIndex:1});
    
    // 키워드로 장소를 검색합니다
    searchPlaces();
    
    // 키워드 검색을 요청하는 함수입니다
    function searchPlaces() {
    
        var keyword = document.getElementById('keyword').value;
    
        if (!keyword.replace(/^\s+|\s+$/g, '')) {
            alert('키워드를 입력해주세요!');
            return false;
        }
    
        // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다
        ps.keywordSearch( keyword, placesSearchCB); 
    }
    
    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다
    function placesSearchCB(data, status, pagination) {
        if (status === daum.maps.services.Status.OK) {
    
            // 정상적으로 검색이 완료됐으면
            // 검색 목록과 마커를 표출합니다
            displayPlaces(data);
    
            // 페이지 번호를 표출합니다
            displayPagination(pagination);
    
        } else if (status === daum.maps.services.Status.ZERO_RESULT) {
    
            alert('검색 결과가 존재하지 않습니다.');
            return;
    
        } else if (status === daum.maps.services.Status.ERROR) {
    
            alert('검색 결과 중 오류가 발생했습니다.');
            return;
    
        }
    }
    
    // 검색 결과 목록과 마커를 표출하는 함수입니다
    function displayPlaces(places) {
    
        var listEl = document.getElementById('placesList'), 
        menuEl = document.getElementById('menu_wrap'),
        fragment = document.createDocumentFragment(), 
        bounds = new daum.maps.LatLngBounds(), 
        listStr = '';
        
        // 검색 결과 목록에 추가된 항목들을 제거합니다
        removeAllChildNods(listEl);
    
        // 지도에 표시되고 있는 마커를 제거합니다
        removeMarker();
        
        for ( var i=0; i<places.length; i++ ) {
    
            // 마커를 생성하고 지도에 표시합니다
            var placePosition = new daum.maps.LatLng(places[i].y, places[i].x),
                marker = addMarker(placePosition, i), 
                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다
            bounds.extend(placePosition);
            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
            // LatLngBounds 객체에 좌표를 추가합니다
           
    
            // 마커와 검색결과 항목에 mouseover 했을때
            // 해당 장소에 인포윈도우에 장소명을 표시합니다
            // mouseout 했을 때는 인포윈도우를 닫습니다
            (function(marker, title) {
                daum.maps.event.addListener(marker, 'mouseover', function() {
                    displayInfowindow(marker, title);
                });
    
                daum.maps.event.addListener(marker, 'mouseout', function() {
                    infowindow.close();
                });
                daum.maps.event.addListener(marker, 'click', function(mouseEvent) {
          
                      
                      var latlng = marker.getPosition();
                      
                      main_lat = latlng.getLat();
                      main_lng = latlng.getLng();
                    //   set_title = title;
                      
                    if (click_num == 0){
                    set_lat0 = latlng.getLat();
                    set_lng0 = latlng.getLng();
                    set_title0 = title;
                    }
                    else if (click_num == 1){
                    set_lat1 = latlng.getLat();
                    set_lng1 = latlng.getLng();
                    set_title1 = title;
                    }
                    else if (click_num == 2){
                    set_lat2 = latlng.getLat();
                    set_lng2 = latlng.getLng();
                    set_title2 = title;
                    }
                    else if (click_num == 3){
                    set_lat3 = latlng.getLat();
                    set_lng3 = latlng.getLng();
                    set_title3 = title;
                    }
                    else if (click_num == 4){
                    set_lat4 = latlng.getLat();
                    set_lng4 = latlng.getLng();
                    set_title4 = title;
                    }
                    else{
                        return;
                    }
                      
                    setCenter();
                      
                    //   var message = '클릭한 위치의 위도는 ' + latlng.getLat() + ' 이고, ';
                    //   message += '경도는 ' + latlng.getLng() + set_title + ' 입니다';
                          
                        // console.log(message);
                 });
    
                itemEl.onmouseover =  function () {
                    displayInfowindow(marker, title);
                    // var latlng = marker.getPosition();
                    // if(set_lat0 === 0){}
                    // else{
                    // setCenter();
                    // }
                };
    
                itemEl.onmouseout =  function () {
                    infowindow.close();
                };
                itemEl.onclick = function (){
                    var latlng = marker.getPosition();
                  
                    main_lat = latlng.getLat();
                    main_lng = latlng.getLng();
                //   set_title = title;
                  
                    if (click_num == 0){
                    set_lat0 = latlng.getLat();
                    set_lng0 = latlng.getLng();
                    set_title0 = title;
                    }
                    else if (click_num == 1){
                    set_lat1 = latlng.getLat();
                    set_lng1 = latlng.getLng();
                    set_title1 = title;
                    }
                    else if (click_num == 2){
                    set_lat2 = latlng.getLat();
                    set_lng2 = latlng.getLng();
                    set_title2 = title;
                    }
                    else if (click_num == 3){
                    set_lat3 = latlng.getLat();
                    set_lng3 = latlng.getLng();
                    set_title3 = title;
                    }
                    else if (click_num == 4){
                    set_lat4 = latlng.getLat();
                    set_lng4 = latlng.getLng();
                    set_title4 = title;
                    }
                    else{
                        return;
                    }
                      
                setCenter();
                  
                //   var message = '클릭한 위치의 위도는 ' + latlng.getLat() + ' 이고, ';
                //   message += '경도는 ' + latlng.getLng() + set_title + ' 입니다';
              
                //   console.log(message);
                  
                };
            })(marker, places[i].place_name);
            fragment.appendChild(itemEl);
        }
        // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다
        listEl.appendChild(fragment);
        menuEl.scrollTop = 0;
        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
        map.setBounds(bounds);
    }
    
    // 검색결과 항목을 Element로 반환하는 함수입니다
    function getListItem(index, places) {
    
        var el = document.createElement('li'),
        itemStr = '<span class="markerbg marker_' + (index+1) + '"></span>' +
                    '<div class="info">' +
                    '   <h5>' + places.place_name + '</h5>';
    
        if (places.road_address_name) {
            itemStr += '    <span>' + places.road_address_name + '</span>' +
                        '   <span class="jibun gray">' +  places.address_name  + '</span>';
        } else {
            itemStr += '    <span>' +  places.address_name  + '</span>'; 
        }
                     
          itemStr += '  <span class="tel">' + places.phone  + '</span>' +
                    '</div>';           
    
        el.innerHTML = itemStr;
        el.className = 'item';
    
        return el;
    }
    
    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다
    function addMarker(position, idx, title) {
        var imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다
            imageSize = new daum.maps.Size(36, 37),  // 마커 이미지의 크기
            imgOptions =  {
                spriteSize : new daum.maps.Size(36, 691), // 스프라이트 이미지의 크기
                spriteOrigin : new daum.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표
                offset: new daum.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표
            },
            markerImage = new daum.maps.MarkerImage(imageSrc, imageSize, imgOptions),
                marker = new daum.maps.Marker({
                position: position, // 마커의 위치
                image: markerImage, 
            });
    
        marker.setMap(map); // 지도 위에 마커를 표출합니다
        markers.push(marker);  // 배열에 생성된 마커를 추가합니다
    
        return marker;
    }
    
    // 지도 위에 표시되고 있는 마커를 모두 제거합니다
    function removeMarker() {
        for ( var i = 0; i < markers.length; i++ ) {
            markers[i].setMap(null);
        }   
        markers = [];
    }
    
    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다
    function displayPagination(pagination) {
        var paginationEl = document.getElementById('pagination'),
            fragment = document.createDocumentFragment(),
            i; 
    
        // 기존에 추가된 페이지번호를 삭제합니다
        while (paginationEl.hasChildNodes()) {
            paginationEl.removeChild (paginationEl.lastChild);
        }
    
        for (i=1; i<=pagination.last; i++) {
            var el = document.createElement('a');
            
            el.innerHTML = i;
    
            if (i===pagination.current) {
                el.className = 'on';
            } else {
                el.onclick = (function(i) {
                    return function() {
                        pagination.gotoPage(i);
                    }
                })(i);
            }
    
            fragment.appendChild(el);
        }
        paginationEl.appendChild(fragment);
    }
    
    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다
    // 인포윈도우에 장소명을 표시합니다
    function displayInfowindow(marker, title) {
        var content = '<div style="padding:5px;z-index:1;">' + title + '</div>';
    
        infowindow.setContent(content);
        infowindow.open(map, marker);
        
    }
    
     // 검색결과 목록의 자식 Element를 제거하는 함수입니다
    function removeAllChildNods(el) {   
        while (el.hasChildNodes()) {
            el.removeChild (el.lastChild);
        }
    }

</script>